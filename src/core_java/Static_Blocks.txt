static block:
=============
syntax:
-------
static
{
   ;;;;
}
When this program is executed the JVM is going to be start, JVM looks for .class file, once the JVM find .class file it
is loaded from its location to the java program	, before execute the program if I want to perform pre-execution after it,
then I go for static blocks.
Before comes to the main method, the static blocks are going to be executed, means, at the time of class loading, 
automatically all the static blocks are going to be executed by the JVM-> Means at the time of class loading, 
automatically all the static blocks are going to be executed. So when i run a program JVM is going to be start, it find
.class file and whenever the jvm is loading it, all the static block are automatically executed and then JVM looks for
main method, if the main method is there the execution will begin. 

instance block:
==============
What are instance blocks?
If i want to perform other initialization, in class can be any instance blocks, the instance blocks are executed when
the objects are created, instance blocks are executed as constructors are executed --> with the object creation
syntax:
-------
{
   ;;;;
}

//package core_java;

class Blocks_Implementation
{
   static
   {
      System.out.println("Parent class Static Block");
   }
   {
      System.out.println("Parent class INSTANCE Block");
   }
  public Blocks_Implementation()
   {
      System.out.println("Parent class Default Constructor");
   }
}
public class Static_Instance_Blocks_Execution extends Blocks_Implementation 
{
   static
   {
      System.out.println("Child class Static Block");
   }
   {
      System.out.println("Child class INSTANCE Block");
   }
   public Static_Instance_Blocks_Execution()
   {
      System.out.println("Child class Default Constructor");
   }
   public static void main(String[] args)
   {
      System.out.println("Java Virtual Machine");    
      Static_Instance_Blocks_Execution otvar = new Static_Instance_Blocks_Execution();  
   }
}
java Static_Instance_Blocks_Execution
Parent class Static Block
Child class Static Block
Java Virtual Machine
Parent class INSTANCE Block
Parent class Default Constructor
Child class INSTANCE Block
Child class Default Constructor
